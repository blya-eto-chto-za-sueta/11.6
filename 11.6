#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct operation {
    char base[2];
    char degree[2];
    char logN[5];
} operation;
operation name;

void operationInitialization() {
    strcpy(name.base, "N\0");
    strcpy(name.degree, "N\0");
    strcpy(name.logN, "logN\0");
}

void Analysis(char* str, double* arr) {
    char t = 0;
    double tempd = 0;
    char* tempStr = (char*)calloc(10, sizeof(char));
    char* tokens = strtok(str, "O()\n ");

    while (tokens != NULL) {
        if (strcmp(tokens,name.degree)==0){
            arr[1] = 1;
        }
        if (strcmp(tokens,name.logN)==0){
            arr[2] = 1;
        }
        sscanf(tokens, "%lf^%c", &tempd, t);
        if (tempStr!=NULL && strcmp(name.base, tempStr) == 0) {
            arr[0] = 1 ;
            arr[0] = arr[0] + tempd;
        }
        //tempStr = NULL;
        sscanf(tokens, "%c^%lf", &t, &tempd);
        if (t == 'N') {
            arr[1] = 1;
            arr[1] += tempd;
        }
        tempStr = NULL;
        sscanf(tokens, "%s^%lf", tempStr, &tempd);
        if (tempStr!=NULL && strcmp(name.logN, tempStr) == 0) {
            arr[2] = 1;
            arr[2] += tempd;
        }
        tokens = strtok(NULL, "O()\n ");
    }
}

int output(double* arr1, double* arr2) {
    for (int i = 0;i<3; i++){
        if(arr1[i]<arr2[i]){
            return -1;
        }
        else if(arr2[i]<arr1[i]){
            return 1;
        }
    }
    return 0;
}

int main() {
    operationInitialization();
    freopen("input.txt", "r",stdin);
    freopen("output.txt", "w",stdout);
    int Q=0; // 𝑄 — сколько тестовых случаев нужно обработать
    scanf("%d\n", &Q);

    for (int i = 0; i < Q; i++) {
        char* str1 = (char*)calloc(100,sizeof(char));
        char* str2 = (char*)calloc(100,sizeof(char));
        gets(str1);
        gets(str2);
        double* first = (double*)calloc(3, sizeof(double));
        double* second = (double*)calloc(3, sizeof(double));

        Analysis(str1, first);
        Analysis(str2, second);

        int rez = output(first, second);
        printf("%d\n", rez);

    }
    fclose(stdin);
    fclose(stdout);

    return 0;
}
